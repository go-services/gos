// Code generated by gos. DO NOT EDIT
package gen

import (
    "{{ .RootPkg }}/gen/endpoint"
    "{{.RootPkg }}/gen/transport"
    generatedTransport "{{ .RootPkg }}/gen/transport/http"
    service "{{ .RootPkg }}"
    kitEndpoint "github.com/go-kit/kit/endpoint"
    "github.com/go-kit/kit/transport/http"
)

type serviceTransport struct {
    http generatedTransport.Transport
}

func (b *serviceTransport) HTTP() generatedTransport.Transport {
    return b.http
}

type ServiceMiddleware func(service.{{ .InterfaceName }}) service.{{ .InterfaceName }}

func MakeService(svc service.{{ .InterfaceName }}, mdw ...ServiceMiddleware) service.{{ .InterfaceName }} {
    for _, m := range mdw {
        svc = m(svc)
    }
    return svc
}

func MakeTransports(endpoints endpoint.Endpoints, httpOptions ...http.ServerOption) transport.Transports {
    httpTransport := generatedTransport.MakeHttpTransport(endpoints, httpOptions...)
    return &serviceTransport{
        http: httpTransport,
    }
}

func MakeEndpoints(b service.{{ .InterfaceName }}, global ...kitEndpoint.Middleware) endpoint.Endpoints {
    serviceEndpoints := endpoint.MakeEndpoints(b, global...)
    return serviceEndpoints
}
